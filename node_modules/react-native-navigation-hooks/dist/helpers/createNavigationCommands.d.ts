import { Layout, Options } from 'react-native-navigation';
import { SetRootCommand } from './setRoot';
import { ShowModalCommand } from './showModal';
import { ShowOverlayCommand } from './showOverlay';
interface SetStackRootCommand {
    <P = {}>(layout: Layout<P> | Layout<P>[]): Promise<any>;
    <P = {}>(name: string, passProps?: P, options?: Options): Promise<any>;
}
interface PushCommand {
    <P = {}>(layout: Layout<P>): Promise<any>;
    (name: string): Promise<any>;
    <P = {}>(name: string, passProps?: P): Promise<any>;
    <P = {}>(name: string, passProps?: P, options?: Options): Promise<any>;
}
export declare type NavigationCommands = {
    setStackRoot: SetStackRootCommand;
    push: PushCommand;
    mergeOptions: (options: Options) => void;
    updateProps: (props: object) => void;
    dismissModal: (mergeOptions?: Options) => Promise<any>;
    pop: (mergeOptions?: Options) => Promise<any>;
    popTo: (mergeOptions?: Options) => Promise<any>;
    popToRoot: (mergeOptions?: Options) => Promise<any>;
    dismissOverlay: () => Promise<any>;
    /**
     * @deprecated Use setRoot import from 'react-native-navigation-hooks'
     */
    setRoot: SetRootCommand;
    /**
     * @deprecated Use setRoot import from 'react-native-navigation-hooks'
     */
    showModal: ShowModalCommand;
    /**
     * @deprecated Use showOverlay import from 'react-native-navigation-hooks'
     */
    showOverlay: ShowOverlayCommand;
    /**
     * @deprecated Use Navigation.setDefaultOptions instead
     */
    setDefaultOptions: (options: Options) => void;
    /**
     * @deprecated Use Navigation.dismissAllModals instead
     */
    dismissAllModals: (mergeOptions?: Options) => Promise<any>;
    /**
     * @deprecated Use Navigation.getLaunchArgs instead
     */
    getLaunchArgs: () => Promise<any>;
};
/**
 * Creates a set of action helpers for
 * [component](https://wix.github.io/react-native-navigation/api/component),
 * [root](https://wix.github.io/react-native-navigation/api/root),
 * [stack](https://wix.github.io/react-native-navigation/api/stack),
 * [modal](https://wix.github.io/react-native-navigation/api/modal),
 * [overlay](https://wix.github.io/react-native-navigation/api/overlay)
 * Navigation API exposing multiple function types for the each function as a list of overloads.
 */
declare function createNavigationCommands(
/**
 * Component reference id. Used to give context to the Navigation functions that requires componentId parameter.
 */
componentId: string): NavigationCommands;
export default createNavigationCommands;
//# sourceMappingURL=createNavigationCommands.d.ts.map